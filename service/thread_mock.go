// Automatically generated by MockGen. DO NOT EDIT!
// Source: thread.go

package service

import (
	gomock "github.com/golang/mock/gomock"
	dao "github.com/shohhei1126/bbs-go/dao"
	model "github.com/shohhei1126/bbs-go/model"
)

// Mock of Thread interface
type MockThread struct {
	ctrl     *gomock.Controller
	recorder *_MockThreadRecorder
}

// Recorder for MockThread (not exported)
type _MockThreadRecorder struct {
	mock *MockThread
}

func NewMockThread(ctrl *gomock.Controller) *MockThread {
	mock := &MockThread{ctrl: ctrl}
	mock.recorder = &_MockThreadRecorder{mock}
	return mock
}

func (_m *MockThread) EXPECT() *_MockThreadRecorder {
	return _m.recorder
}

func (_m *MockThread) FindThreads(paging dao.Paging) (model.ThreadSlice, error) {
	ret := _m.ctrl.Call(_m, "FindThreads", paging)
	ret0, _ := ret[0].(model.ThreadSlice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockThreadRecorder) FindThreads(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FindThreads", arg0)
}
